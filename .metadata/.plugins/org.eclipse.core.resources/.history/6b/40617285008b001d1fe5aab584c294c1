package com.bit;

import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.Label;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;

public class Ex01 extends Frame implements ActionListener,Runnable{
	Label nla;
	JButton[] btns;
	Button startBtn;
	Panel pc;
	public Ex01() {
		setLayout(new BorderLayout());
		Panel pn = new Panel();
		nla = new Label("60s");
		pn.add(nla);
		
		Panel ps = new Panel();
		Label sla = new Label("Num:0");
		ps.add(sla);
		btns = new JButton[4*4];
		pc = new Panel(new GridLayout(4,4));
		for (int i = 0; i < btns.length; i++) {
			btns[i]= new JButton();
			ImageIcon defaultIcon = null;
			if(i%4==0) {
				defaultIcon = new ImageIcon("target.jpg");	
			}else if(i%4==1) {
				defaultIcon = new ImageIcon("target2.jpg");
			}else if(i%4==2) {
				defaultIcon = new ImageIcon("target.jpg");
			}else {
				defaultIcon = new ImageIcon("target2.jpg");
			}
			
			btns[i].setIcon(defaultIcon);
			
		}
		for (int i = 0; i < btns.length; i++) {
			btns[i].setEnabled(false);
		}
		mix();

		
		Panel pe = new Panel(new GridLayout(4,1));
		startBtn = new Button("start");
		Button endBtn = new Button("end");
		startBtn.addActionListener(this);
		endBtn.addActionListener(this);
		pe.add(new Label());
		pe.add(startBtn);
		pe.add(new Label());
		pe.add(endBtn);
		pe.add(new Label());
		
		add(pn,BorderLayout.NORTH);
		add(ps,BorderLayout.SOUTH);
		add(pc,BorderLayout.CENTER);
		add(pe,BorderLayout.EAST);
		
		
		
		setBounds(100, 100, 450, 450);
		setVisible(true);
	}
	
	public static void main(String[] args) {
		Ex01 me = new Ex01();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Button btn = (Button) e.getSource();
		if(btn.getLabel().equals("start")) {
			System.out.println("start");
			Thread thr = new Thread(this);
			thr.start();
		}else if(btn.getLabel().equals("end")) {
			dispose();
		}
		
		
	}
	public void editBtns(boolean boo) {
		for (int i = 0; i < btns.length; i++) {
			btns[i].setEnabled(boo);
		}
	}
	
	public void mix() {
		Random random = new Random();
		for (int i = 0; i < 16; i++) {
			int ran1 = random.nextInt(16);
			int ran2 = random.nextInt(16);
			JButton temp = btns[ran1];
			btns[ran1] = btns[ran2];
			btns[ran2] = temp;			
		}
		for (int i = 0; i < btns.length; i++) {
			pc.add(btns[i]);
		}

	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		int cnt = 10;
		while(cnt>=0) {
			startBtn.setEnabled(false);
			nla.setText(cnt+"s");
			editBtns(true);
			
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}	
			cnt--;
		}
		
	}
}
